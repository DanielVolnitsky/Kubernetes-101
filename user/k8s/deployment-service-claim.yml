apiVersion: v1
kind: Namespace
metadata:
  name: common

---
# requests a volume of at least 1Mi that can provide read-write access
# for at most one Node at a time
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-demo-file-pv-claim
  namespace: common
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-deployment
  namespace: common
  labels:
    app: user
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
    spec:
      volumes:
        - name: user-demo-file-storage
          persistentVolumeClaim:
            claimName: user-demo-file-pv-claim
      containers:
        - name: user-service
          image: waytodanny/k8s-101-user-service
          ports:
            - containerPort: 8082
          volumeMounts:
            - mountPath: "/tmp/file/"
              name: user-demo-file-storage

---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: common
spec:
  type: NodePort
  selector:
    app: user
  ports:
    - protocol: TCP
      # the port number which is exposed by the Kubernetes service. External services, or services within the same cluster, will communicate with this service on this port number.
      port: 8082
      # the port number on the pods where the actual service is running and requests will be sent. It is the port of your application on the actual pods targeted by the service.
      targetPort: 8082
      nodePort: 30002